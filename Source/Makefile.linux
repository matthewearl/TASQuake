#
# TASQuake Makefile for Linux
#
# Based on the Joequake Linux Makefile
#

CC 		:= gcc

################

default_target: glx

all: glx

################################
# Directories for object files #
################################

GLX_DIR		:= release_glx

################
# Binary files #
################

GLX_TARGET	:= $(GLX_DIR)/tasquake.glx

################

C_BUILD = $(_E)$(CC) -c -o $@ $(_CFLAGS) $<
CPP_BUILD = $(_E)$(CC) -c -o $@ $(_CFLAGS) $<
S_BUILD = $(_E)$(CC) -c -o $@ $(_CFLAGS) -DELF -x assembler-with-cpp $<
BUILD = $(_E)$(CC) -o $@ $(_OBJS) $(_LDFLAGS)
MKDIR = $(_E)mkdir -p $@
RM_FILES = $(_E)rm -f $(_FILES)
RM_DIRS = $(_E)rm -fr $(_DIRS)

################

$(GLX_DIR):
	$(MKDIR)

CFLAGS += -m32 -funsigned-char		-O6 \
	-D__linux__	-march=pentiumpro	-Wall \
	-funroll-loops	-fomit-frame-pointer	-DNDEBUG \
	-ffp-contract=off -ffloat-store \
	-fno-strength-reduce	-fexpensive-optimizations \
	-I../dependencies -I/usr/include

LDFLAGS := -m32 -lm -ldl

#######
# GLX #
#######

GLX_C_FILES := \
	cd_linux	chase		cl_demo		cl_input \
	cl_main		cl_parse	cl_tent		cmd \
	common		console		crc		cvar \
	\
	gl_draw		gl_mesh		gl_model	gl_refrag \
	gl_rlight	gl_rmain	gl_rmisc	gl_rpart \
	gl_rsurf	gl_screen	gl_warp \
	\
	host		host_cmd	keys		mathlib \
	menu		nehahra		net_bsd		net_dgrm \
	net_loop	net_main	net_udp		net_vcr \
	pr_cmds		pr_edict	pr_exec		r_part \
	sbar		snd_dma		snd_linux	snd_mem \
	snd_mix		sv_main		sv_move		sv_phys \
	sv_user		sys_linux	vid_common_gl	vid_glx \
	view		wad		world		zone \
	image		version		security	iplog \
	cl_slist	gl_decals

GLX_CPP_FILES := afterframes bookmark camera data_export draw hooks hud ipc_linux ipc_main reset rewards savestate \
	script_parse script_playback simulate state_test strafing test_runner utils

GLX_C_OBJS := $(addprefix $(GLX_DIR)/, $(addsuffix .o, $(GLX_C_FILES)))
GLX_CPP_OBJS := $(addprefix $(GLX_DIR)/, $(addsuffix .o, $(GLX_CPP_FILES)))

GLX_CFLAGS := $(CFLAGS) \
	-DGLQUAKE	-I/usr/X11R6/include

GLX_LDFLAGS := $(LDFLAGS) \
	-lGL		-L/usr/X11R6/lib	-lX11 \
	-lXext		-lXxf86dga		-lXxf86vm \
	-lpng		-ljpeg -lstdc++

glx: _DIR := $(GLX_DIR)
glx: _OBJS := $(GLX_C_OBJS) $(GLX_CPP_OBJS)
glx: _LDFLAGS := $(GLX_LDFLAGS)
glx: _CFLAGS := $(GLX_CFLAGS)
glx: $(GLX_TARGET)

$(GLX_TARGET): $(GLX_DIR) $(GLX_C_OBJS) $(GLX_CPP_OBJS)
	$(BUILD)

$(GLX_C_OBJS): $(GLX_DIR)/%.o: %.c quakedef.h
	$(C_BUILD)

$(GLX_CPP_OBJS): $(GLX_DIR)/%.o: tas/%.cpp quakedef.h
	$(CPP_BUILD)

glxclean: _FILES += $(GLX_C_OBJS) $(GLX_CPP_OBJS)
glxclean: _DIRS := $(GLX_DIR)
glxclean:
	$(RM_FILES)
	$(RM_DIRS)

glxclobber: _FILES := $(GLX_TARGET)
glxclobber: glxclean

#################

clean: glxclean

clobber: _DIRS := $(GLX_DIR)
clobber:
	$(RM_DIRS)
